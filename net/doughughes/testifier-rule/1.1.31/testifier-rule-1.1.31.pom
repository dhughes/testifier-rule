<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>net.doughughes</groupId>
    <artifactId>testifier-rule</artifactId>
    <packaging>jar</packaging>
    <version>1.1.31</version>

    <name>${project.groupId}:${project.artifactId}</name>
    <description>
        A jUnit rule that can be used to report test execution results
        in real time to a configurable REST endpoint.
    </description>
    <url>https://github.com/dhughes/testifier-rule</url>

    <!-- this is an arbitrary OSS license -->
    <licenses>
        <license>
            <name>The Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Doug Hughes</name>
            <email>doug@doughughes.net</email>
            <organization>Doug Hughes</organization>
            <organizationUrl>http://www.doughughes.net</organizationUrl>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:git@github.com:dhughes/testifier-rule.git</connection>
        <developerConnection>scm:git:git@github.com:dhughes/testifier-rule.git</developerConnection>
        <url>http://github.com/dhughes/testifier-rule/tree/master</url>
    </scm>

    <properties>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.testTarget>1.8</maven.compiler.testTarget>
        <maven.compiler.testSource>1.8</maven.compiler.testSource>
        <github.global.server>github</github.global.server>
    </properties>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.7</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>fluent-hc</artifactId>
            <version>4.5.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.3.2</version>
        </dependency>
        <dependency>
            <groupId>com.github.javaparser</groupId>
            <artifactId>javaparser-core</artifactId>
            <version>2.5.1</version>
        </dependency>


        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito</artifactId>
            <version>1.6.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>1.6.5</version>
            <scope>test</scope>
        </dependency>


    </dependencies>

    <distributionManagement>
        <repository>
            <id>internal.repo</id>
            <name>Temporary Staging Repository</name>
            <url>file://${project.build.directory}/mvn-repo</url>
        </repository>
    </distributionManagement>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
                <configuration>
                    <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.github.github</groupId>
                <artifactId>site-maven-plugin</artifactId>
                <version>0.12</version>
                <executions>
                    <!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
                    <execution>
                        <goals>
                            <goal>site</goal>
                        </goals>
                        <phase>deploy</phase>
                        <configuration>
                            <!-- git commit message -->
                            <message>Maven artifacts for ${project.version}</message>
                            <!-- disable webpage processing -->
                            <noJekyll>true</noJekyll>
                            <!-- matches distribution management repository url above -->
                            <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
                            <!-- remote branch name -->
                            <branch>refs/heads/mvn-repo</branch>
                            <includes><include>**/*</include></includes>
                            <!-- allow non-snapshot versions -->
                            <merge>true</merge>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>